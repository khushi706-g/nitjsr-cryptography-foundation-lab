

# Convert letter -> number
def char_to_num(c):
    return ord(c.upper()) - 65

# Convert number -> letter
def num_to_char(n):
    return chr((n % 26) + 65)

# Pad plaintext
def pad_text(text, size):
    text = text.upper().replace(" ", "").replace("J", "I")
    if len(text) % size != 0:
        text += "X"
    return text

# Modular inverse (number)
def mod_inverse(a, m=26):
    a = a % m
    for x in range(1, m):
        if (a * x) % m == 1:
            return x
    return None

# Modular inverse of 2x2 matrix
def matrix_inverse(matrix, mod=26):
    a, b = matrix[0]
    c, d = matrix[1]
    det = (a * d - b * c) % mod
    det_inv = mod_inverse(det, mod)
    if det_inv is None:
        raise ValueError("Key matrix not invertible under mod 26")

    # Adjugate matrix
    inv_matrix = [[ d, -b],
                  [-c,  a]]

    # Multiply each element by det_inv and mod
    for i in range(2):
        for j in range(2):
            inv_matrix[i][j] = (inv_matrix[i][j] * det_inv) % mod

    return inv_matrix

# Multiply 2x2 matrix with 2x1 vector
def multiply_matrix_vector(matrix, vector, mod=26):
    result = [0, 0]
    for i in range(2):
        result[i] = (matrix[i][0]*vector[0] + matrix[i][1]*vector[1]) % mod
    return result

# Encrypt
def encrypt(plaintext, key):
    plaintext = pad_text(plaintext, 2)
    cipher = ""
    for i in range(0, len(plaintext), 2):
        pair = [char_to_num(plaintext[i]), char_to_num(plaintext[i+1])]
        c = multiply_matrix_vector(key, pair)
        cipher += num_to_char(c[0]) + num_to_char(c[1])
    return cipher

# Decrypt
def decrypt(ciphertext, key):
    key_inv = matrix_inverse(key, 26)
    plain = ""
    for i in range(0, len(ciphertext), 2):
        pair = [char_to_num(ciphertext[i]), char_to_num(ciphertext[i+1])]
        p = multiply_matrix_vector(key_inv, pair)
        plain += num_to_char(p[0]) + num_to_char(p[1])
    return plain
#---Example---
key_matrix = [[3, 3],
              [2, 5]]   # Example key (invertible mod 26)

plaintext = input("Enter plaintext: ")
cipher = encrypt(plaintext, key_matrix)
print("\nEncrypted Text:", cipher)

decrypted = decrypt(cipher, key_matrix)
print("Decrypted Text:", decrypted)
